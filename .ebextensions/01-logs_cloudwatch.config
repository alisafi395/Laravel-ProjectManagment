packages:
  yum:
    amazon-cloudwatch-agent: []     # ensure the agent is present on AL2

files:
  "/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.d/laravel_logs.json":
    mode: "000644"
    owner: root
    group: root
    content: |
      {
        "logs": {
          "logs_collected": {
            "files": {
              "collect_list": [
                {
                  "file_path": "/var/app/current/storage/logs/*.log",
                  "log_group_name": "/aws/elasticbeanstalk/laravel-sample-deployment-env/laravel",
                  "log_stream_name": "{instance_id}"
                }
              ]
            }
          }
        }
      }

container_commands:
  00_stop_agent_if_running:
    command: "systemctl stop amazon-cloudwatch-agent || true"

  01_apply_agent_config:
    # fetch & apply config; don't -s (start) here so we can control start & error handling explicitly
    command: >
      /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl
      -a fetch-config
      -m ec2
      -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.d/laravel_logs.json

  02_enable_and_start_agent:
    command: |
      systemctl enable amazon-cloudwatch-agent || true
      systemctl start amazon-cloudwatch-agent

  03_verify_agent_running:
    # fail early with a clear message if the service isn't active
    command: |
      systemctl is-active amazon-cloudwatch-agent >/dev/null 2>&1 || {
        echo "CloudWatch Agent did not start properly"; exit 1;
      }
